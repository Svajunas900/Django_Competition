services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app_network
    depends_on:
      - backend

  fastapi:
    build:
      context: ./fastapi
      dockerfile: dockerfiles/fastapi.dockerfile
    ports:
      - "7000:7000"
    networks:
      - app_network
    depends_on:
      - backend
      - selenium_scraper
  
  celery_worker:
    build:
      context: ./fastapi
      dockerfile: dockerfiles/celery.dockerfile
    container_name: celery_worker
    volumes:
      - ./fastapi/celery_app:/celery_app
    depends_on:
      - redis
      - selenium_scraper
    networks:
      - app_network

  celery_beat:
    build:
      context: ./fastapi
      dockerfile: dockerfiles/celery.dockerfile
    container_name: celery_beat
    command: celery -A celery_app beat --loglevel=info
    depends_on:
      - redis
      - backend
      - selenium_scraper
    networks:
      - app_network

  redis:
    image: redis:7.4.2
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - app_network
    

  backend:
    build:
      context: ./backend
      dockerfile: dockerfiles/python.dockerfile
    ports:
      - "8000:8000"
    networks:
      - app_network
    env_file:
      - ./backend/.env
    depends_on:
      - postgresdb
  
  postgresdb:
    image: postgres:alpine
    ports:
      - "5432:5432"
    env_file:
      - ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  selenium_scraper:
    image: selenium/standalone-chrome
    ports: 
      - "4444:4444"
    networks:
      - app_network

networks:
  app_network:

volumes:
  postgres_data: